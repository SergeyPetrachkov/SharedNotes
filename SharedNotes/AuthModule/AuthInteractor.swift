//
//  AuthInteractor.swift
//  SharedNotes
//
//  Created by Sergey Petrachkov on 8/29/17.
//  Copyright (c) 2017 Sergey Petrachkov. All rights reserved.
//
//  This file was generated by the Actonica VIPER Xcode Templates so
//  you can apply VIPER architecture to your iOS projects
//

import UIKit
import RealmSwift

protocol AuthInteractorInput {
  var output : AuthInteractorOutput? { get set }
  func registerUser(userRequest: Auth.Context.Request)
}

protocol AuthInteractorOutput {
  func didRegister(user : Auth.Context.Response)
  func didFail(with error: Error)
}


class AuthInteractor: AuthInteractorInput {
  let service: AuthService = AuthService()
  var output: AuthInteractorOutput?
  
  // MARK: Do something
  
  func registerUser(userRequest: Auth.Context.Request) {
    if let realm = try? Realm() {
      do{
        try realm.write() {
  
          let user = realm.create(User.self)
          user.userId = String.randomString(length: 8)
          user.firstName = userRequest.firstname
          user.lastName = userRequest.lastname
          self.output?.didRegister(user: Auth.Context.Response(user: user))
        }
      }
      catch {
        self.output?.didFail(with: NSError(domain: "sharednotes", code: -1, userInfo: [NSLocalizedDescriptionKey: "Failed register user"]))
      }
    }
    else{
      self.output?.didFail(with: NSError(domain: "sharednotes", code: -1, userInfo: [NSLocalizedDescriptionKey: "Failed to initialize realm"]))
    }
  }
}
